document.addEventListener("DOMContentLoaded",()=>{
        //accessing all the elements of html
    let todoInput = document.getElementById("todo-input");
    let addTaskButton = document.getElementById("add-task-btn");
    let todoList = document.getElementById("todo-list");

    let tasks =JSON.parse(localStorage.getItem("tasks")) || []; //storing a value;
    tasks.forEach(task => {
        renderTask(task);
    });
    addTaskButton.addEventListener("click",()=>{
        const taskText = todoInput.value.trim(); //used to access the inputted value and remove all extra whitespaces
        if(taskText === "" ) return; //

        const newTask ={
            id : Date.now(),    //a unique identifier, generated by Date.now().
            text : taskText,
            completed : false,  //it tells wether the task is completed or not
        }

        tasks.push(newTask);
        todoInput.value=""; //clear input
        saveTasks();
        renderTask(newTask);
        console.log(tasks);
        
    });
    //this function here uses the 
    function renderTask (task){ //render= display
        const li= document.createElement("li");
        li.setAttribute("data-id",task.id);
        //The <span> element in HTML is an inline, non-semantic container used to group and apply styles or scripts to a specific portion of text or other inline elements within a larger content block.
        li.innerHTML = `
        <span>${task.text}</span>   
        <button>delete</button>`;
        todoList.appendChild(li);
        li.addEventListener("click",(e)=>{
            if(e.target.tagName == 'BUTTON') return;
            li.classList.toggle('completed')
            saveTasks();
        })
        li.querySelector("button").addEventListener('click',(e)=>{
            e.stopPropagation();//prevents event bublling
            tasks=tasks.filter(t => t.id !== task.id);
            li.remove();
            saveTasks();
        })

    }

    const saveTasks = function () {
        localStorage.setItem("tasks",JSON.stringify(tasks)); //we are calling a local storage api and it stores value in the for of objects which takes the value as string only.
        //so in the local storage whenever u are passing a value in it is rewritting the whole thing rather than updating it.
    }

    
})